-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- DB 생성
CREATE DATABASE baromukza;
USE baromukza;

-- 코드 테이블
-- bank_code Table Create SQL
CREATE TABLE bank_code
(
    `bank_seq`  INT            NOT NULL             AUTO_INCREMENT,
    `name`      VARCHAR(20)    NULL                 ,
    PRIMARY KEY (bank_seq)
);
-- refund_account Table Create SQL
CREATE TABLE bank_account
(
    `bank_account_seq`  INT            NOT NULL     AUTO_INCREMENT,
    `bank_seq`          INT            NULL         ,
    `account`           VARCHAR(45)    NULL         ,
    PRIMARY KEY (bank_account_seq),
    CONSTRAINT `fk_bank_seq`
        FOREIGN KEY (`bank_seq`) REFERENCES `bank_code` (`bank_seq`)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);
-- restaurant_category Table Create SQL
CREATE TABLE restaurant_category
(
    `category_seq`  INT            NOT NULL         AUTO_INCREMENT,
    `name`          VARCHAR(20)    NULL             ,
    PRIMARY KEY (category_seq)
);
CREATE TABLE menu_category
(
    `category_seq`  INT            NOT NULL         AUTO_INCREMENT,
    `name`          VARCHAR(20)    NULL             ,
    PRIMARY KEY (category_seq)
);
-- region Table Create SQL
CREATE TABLE region
(
    `region_seq`      INT              NOT NULL     AUTO_INCREMENT,
    `name`            VARCHAR(50)      NOT NULL     ,
    PRIMARY KEY (region_seq)
);


-- 데이터 테이블
 -- member Table Create SQL
 CREATE TABLE member
 (
     `member_seq`          INT             NOT NULL    AUTO_INCREMENT,
     `id`                  VARCHAR(20)     NOT NULL   ,
     `password`            VARCHAR(20)     NOT NULL   ,
     `name`                VARCHAR(20)     NOT NULL   ,
     `birth`               DATE            NOT NULL   ,
     `gender`              CHAR(1)         NOT NULL   ,
     `phone`               VARCHAR(20)     NOT NULL   ,
     `image`               VARCHAR(300)    NULL       ,
     `email`               VARCHAR(45)     NOT NULL   ,
     `join_date`           DATETIME        NOT NULL   DEFAULT CURRENT_TIMESTAMP,
     PRIMARY KEY (member_seq)
 );
 -- owner Table Create SQL
 CREATE TABLE owner
 (
     `owner_seq`         INT            NOT NULL    AUTO_INCREMENT,
     `id`                VARCHAR(20)    NOT NULL    ,
     `password`          VARCHAR(20)    NOT NULL    ,
     `name`              VARCHAR(20)    NOT NULL    ,
     `phone`             VARCHAR(20)    NOT NULL    ,
     `email`             VARCHAR(45)    NOT NULL    ,
     `bank_account_seq`  INT            NOT NULL    ,
     `join_date`         DATETIME       NOT NULL    DEFAULT CURRENT_TIMESTAMP,
     PRIMARY KEY (owner_seq),
     CONSTRAINT `fk_owner_bank_account_seq`
        FOREIGN KEY (`bank_account_seq`) REFERENCES `bank_account` (`bank_account_seq`)
            ON DELETE CASCADE
            ON UPDATE CASCADE
 );
-- restaurant Table Create SQL
CREATE TABLE restaurant
(
    `restaurant_seq`  INT             NOT NULL      AUTO_INCREMENT,
    `owner_seq`       INT             NOT NULL      ,
    `region_seq`      INT             NOT NULL      ,
    `category_seq`    INT             NULL          ,
    `name`            VARCHAR(50)     NULL          ,
    `description`     VARCHAR(200)    NULL          ,
    `image`           VARCHAR(300)    NULL          ,
    `start_time`      TIME            NULL          ,
    `end_time`        TIME            NULL          ,
    `rating`          INT             NULL          ,
    `phone`           VARCHAR(20)     NULL          ,
    `address_1`       VARCHAR(100)    NULL          ,
    `address_2`       VARCHAR(100)    NULL          ,
    `address_3`       VARCHAR(100)    NULL          ,
    PRIMARY KEY (restaurant_seq),
    CONSTRAINT `fk_restaurant_owner_seq`
       FOREIGN KEY (`owner_seq`) REFERENCES `owner` (`owner_seq`)
           ON DELETE CASCADE
           ON UPDATE CASCADE,
    CONSTRAINT `fk_restaurant_region_seq`
       FOREIGN KEY (`region_seq`) REFERENCES `region` (`region_seq`)
           ON DELETE CASCADE
           ON UPDATE CASCADE,
    CONSTRAINT `fk_restaurant_category_seq`
       FOREIGN KEY (`category_seq`) REFERENCES `restaurant_category` (`category_seq`)
           ON DELETE CASCADE
           ON UPDATE CASCADE
);
-- restaurant_menu Table Create SQL
CREATE TABLE restaurant_menu
(
    `menu_seq`            INT             NOT NULL      AUTO_INCREMENT,
    `restaurant_seq`      INT             NOT NULL      ,
    `menu_category_seq`   INT             NOT NULL      ,
    `name`                VARCHAR(50)     NULL          ,
    `image`               VARCHAR(300)    NULL          ,
    `price`               INT             NULL          ,
    PRIMARY KEY (menu_seq),
    CONSTRAINT `fk_menu_restaurant_seq`
       FOREIGN KEY (`restaurant_seq`) REFERENCES `restaurant` (`restaurant_seq`)
           ON DELETE CASCADE
           ON UPDATE CASCADE,
    CONSTRAINT `fk_menu_category_seq`
        FOREIGN KEY (`menu_category_seq`) REFERENCES `menu_category` (`category_seq`)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);
-- reservation Table Create SQL
CREATE TABLE reservation
(
    `reservation_seq`   INT         NOT NULL        AUTO_INCREMENT,
    `member_seq`        INT         NOT NULL        ,
    `restaurant_seq`    INT         NOT NULL        ,
    `reservated_time`   DATETIME    NULL            ,
    `is_accepted`       CHAR(1)     NULL            ,
    `reservation_time`  DATETIME    NULL            ,
    `member_count`      INT         NULL            ,
    `price`             INT         NULL            ,
    PRIMARY KEY (reservation_seq),
    CONSTRAINT `fk_reservation_restaurant_seq`
       FOREIGN KEY (`restaurant_seq`) REFERENCES `restaurant` (`restaurant_seq`)
           ON DELETE CASCADE
           ON UPDATE CASCADE,
    CONSTRAINT `fk_reservation_member_seq`
       FOREIGN KEY (`member_seq`) REFERENCES `member` (`member_seq`)
           ON DELETE CASCADE
           ON UPDATE CASCADE
);
-- reservation_detail Table Create SQL
CREATE TABLE reservation_detail
(
    `reservation_detail_seq`  INT    NOT NULL       AUTO_INCREMENT,
    `reservation_seq`         INT    NOT NULL       ,
    `menu_seq`                INT    NOT NULL       ,
    `count`                   INT    NULL           ,
    `price`                   INT    NULL           ,
    PRIMARY KEY (reservation_detail_seq),
    CONSTRAINT `fk_reservation_detail_reservation_seq`
       FOREIGN KEY (`reservation_seq`) REFERENCES `reservation` (`reservation_seq`)
           ON DELETE CASCADE
           ON UPDATE CASCADE,
     CONSTRAINT `fk_menu_seq`
        FOREIGN KEY (`menu_seq`) REFERENCES `restaurant_menu` (`menu_seq`)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);
-- favorite Table Create SQL
CREATE TABLE favorite
(
    `member_seq`      INT    NOT NULL               ,
    `restaurant_seq`  INT    NOT NULL               ,
    PRIMARY KEY (member_seq, restaurant_seq),
    CONSTRAINT `fk_favorite_member_seq`
        FOREIGN KEY (`member_seq`) REFERENCES `member` (`member_seq`)
            ON DELETE CASCADE
            ON UPDATE CASCADE,
    CONSTRAINT `fk_favorite_restaurant_seq`
        FOREIGN KEY (`restaurant_seq`) REFERENCES `restaurant` (`restaurant_seq`)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);
-- restaurant_review Table Create SQL
CREATE TABLE restaurant_review
(
    `review_seq`      INT              NOT NULL     AUTO_INCREMENT,
    `restaurant_seq`  INT              NOT NULL     ,
    `member_seq`      INT              NOT NULL     ,
    `rating`          INT              NULL         ,
    `title`           VARCHAR(100)     NULL         ,
    `content`         VARCHAR(1000)    NULL         ,
    `reg_time`        DATETIME         NULL         DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (review_seq),
    CONSTRAINT `fk_restaurant_review_restaurant_seq`
       FOREIGN KEY (`restaurant_seq`) REFERENCES `restaurant` (`restaurant_seq`)
           ON DELETE CASCADE
           ON UPDATE CASCADE,
     CONSTRAINT `fk_restaurant_review_member_seq`
        FOREIGN KEY (`member_seq`) REFERENCES `member` (`member_seq`)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);
CREATE TABLE restaurant_review_image
(
    `image_seq`       INT              NOT NULL     AUTO_INCREMENT,
    `review_seq`      INT              NOT NULL     ,
    `image`           VARCHAR(300)     NULL         ,
    PRIMARY KEY (image_seq),
    CONSTRAINT `fk_restaurant_review_image_review_seq`
       FOREIGN KEY (`review_seq`) REFERENCES `restaurant_review` (`review_seq`)
           ON DELETE CASCADE
           ON UPDATE CASCADE
);